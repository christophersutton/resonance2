name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Create .env file
        run: |
          cat << EOF > packages/server/.env
          CORS_ORIGIN=${{ secrets.CORS_ORIGIN }}
          DB_PATH=./db/data.db
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          MAILGUN_API_KEY=${{ secrets.MAILGUN_API_KEY }}
          MAILGUN_DOMAIN=${{ secrets.MAILGUN_DOMAIN }}
          NGROK_AUTHTOKEN=${{ secrets.NGROK_AUTHTOKEN }}
          EOF

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~/resonance2
            git pull origin main
            # Copy the .env file from the previous step
            cat << EOF > packages/server/.env
            CORS_ORIGIN=${{ secrets.CORS_ORIGIN }}
            DB_PATH=./db/data.db
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            MAILGUN_API_KEY=${{ secrets.MAILGUN_API_KEY }}
            MAILGUN_DOMAIN=${{ secrets.MAILGUN_DOMAIN }}
            NGROK_AUTHTOKEN=${{ secrets.NGROK_AUTHTOKEN }}
            EOF
            docker compose stop app
            docker compose up --build -d app
            docker image prune -f
